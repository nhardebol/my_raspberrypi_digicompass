Intro
=========

Welcome to my Github project aiming for the design of a digital compass with my Raspberry Pi Zero W. The W stands for the Zero version with Wifi.

Goal 1: make headless first time connection to my raspberry pi
---------------------------------------------------------------

1. Download tan zipped image file of the latest Raspbian OS from the official website https://www.raspberrypi.org/downloads/raspbian/

I did download Raspbian Stretch with desktop, Version: April 2018, Release date: 2018-04-18, Kernel version: 4.14.

I read that some of the correct instructions on a proper setup for headless access differ per version of Raspian. 
I tried the below for "Stretch" and it was successfull. I partially followed the instructions from https://www.raspberrypi.org/forums/viewtopic.php?t=176147

2. I used https://etcher.io/  to burn the image to the SD Drive. For that I used an SD USB adapter, that I opened on my linux machine and from which I burned the image.

Then mount the SD card which show up as two drives: (1) a boot partition and (2) a partion ...

3. Make a file named wpa_supplicant.conf in the boot partition.

4. Add the following content to the file wpa_supplicant.conf:
Country=NL
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
   ssid="my-wifi-ssid"
   psk="super-secret-password"
}

5. To cover up ymy "super-secret-password" I executed:
<wpa_passphrase <SSID> <SSID password> 

and got a many-digit line that I added after psk=  In this case without " "

I did change the SSID of my wifi network because I head the impression that the blank spaces in the name were not accepted.

6. I also added an empty file ssh in the same boot folder by typing:
touch ssh


Goal ACHIEVED: as proof see the screen shot of my console: a pi@raspberry shh connection.

<img src="images/ssh_connect2rpi.png" alt="hi" class="inline"/>

------------------------------------------------------------------------------------------------
GOAL 2: Run a Python script on the Raspberry Pi that establishes a Blootooth connection and sends a text string
------------------------------------------------------------------------------------------------

1. Install the Bluetooth library for python "pyBluez" with the command:
      sudo pip3 install pybluez
      
  To check I launced python3 and did:
      import bluetooth
      
---------------------------
GOAL 6: Select a IMU:
---------------------------
* https://learn.adafruit.com/adafruit-9-dof-imu-breakout  : 
     - IMU stands for Inertial Measurement Unit.
     - 9 DOF stands for nine degrees of freedom which involves an Accelerometer, Gyroscope and Magnetometer.
     
* also a 10DOF exists with the addition of a barometer: https://www.adafruit.com/product/1604

--------------------------------------------
GOAL 10: Install the digital compass module
--------------------------------------------

     
     - On magnetic distortions (from http://www.embedded-computing.com/embedded-computing-design/basics-of-6dof-and-9dof-sensor-fusion):
     "magnetometer measurements are susceptible to distortion and errors that can impact calibration and correction in the final environment. Indeed, even if the magnetometer has been thoroughly calibrated 
     by the vendor, once mounted in an end product it will suffer local magnetic field perturbations such as 
     hard-iron and soft-iron distortion, mainly due to the presence of magnetic materials in the vicinity of the sensor. 
     Magnetic interferences can be up to 20x larger than the Earthâ€™s geomagnetic field of interest, so they absolutely have to be cancelled out."
    
     
--------------------------------------------
GOAL 12: Design a proper outdoors digital compass case that fit the raspberry pi zero and add-ons:
--------------------------------------------

     These magnetic distortions are also relevant  when designing the plastic casing, as much as possible without metal parts for the hinge:
      - see for plstic hinge STL designs: https://www.thingiverse.com/thing:697522
      - see for nuts and bolts: https://www.thingiverse.com/thing:193647
